#
#  Copyright 2013-2022 ASC
#
#  This file is part of "Οἰκουμένη" ("Ecumene") - set of applications and
#  configurations to assist with deploy and set up of an environments.
#
#  Οἰκουμένη is free software: you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation, either version 3 of
#  the License, or (at your option) any later version.
#
#  Οἰκουμένη is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Οἰκουμένη.
#  If not, see <http://www.gnu.org/licenses/>.
#
##

require 'json'

file_metadata = "meta-data.json"
vm_params = JSON.parse(File.read(file_metadata))

if ! ENV.has_key? "model"
    print "WARNING: Environment variable 'model' is not set. Appling defaults.\n"
    ENV["model"] = "common"
end

vm_params.each do |single_host_param|
    if ! single_host_param.has_key? "model"
        print "INFO: host '" \
            + single_host_param["hostname"] \
            + "' will be skipped as it have no 'model' declared.\n"
    end
end

vm_params.delete_if {|x| ! x.has_key? "model" \
                        or ! x["model"].include? ENV["model"]}

if vm_params.empty?
    print "ERROR: There is no items in '" \
            + file_metadata + "' for model '" + ENV["model"] + "'.\n"
    exit 1
end

vagrant_conf_format_version = "2"
Vagrant.configure(vagrant_conf_format_version) do |cnf|
    vm_params.each do |single_host_param|
        cnf.vm.define(single_host_param["hostname"]) do |c|
            c.vm.provider(:libvirt) do |p|
                p.memory = "2048"
                p.cpus = "2"
            end
            c.vm.box = single_host_param["distro"]
            c.vm.network "private_network", ip: single_host_param["ssh"]["ip"]
            c.vm.synced_folder '.', '/vagrant', disabled: true  # For Debian default Vagrant's synced folder needs additional sudo access for NFS mounts to be set up.
            c.vm.provision "shell", inline: "packs_list=('python3' 'jq') ; if ! which python3 jq ; then if which apt-get ; then apt-get update && apt-get install --yes \"${packs_list[@]}\" ; elif which dnf ; then dnf update && dnf install ---assume-yes ${packs_list} ; else exit 1 ; fi ; fi"
            c.vm.provision "ansible" do |a|
                a.playbook = "vagrant-nodes-bootstrap.yaml"
                a.extra_vars = {
                    ip_explicit: single_host_param["ssh"]["ip"],
                    ansible_python_interpreter: "/usr/bin/python3"
                }
                a.raw_arguments = [
                        "--timeout",
                        "3600"  # In seconds.
                    ]
            end
        end
    end
end
