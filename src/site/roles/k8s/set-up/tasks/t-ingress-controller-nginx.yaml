---

#
#  Copyright 2013-2021 ASC
#
#  This file is part of "Οἰκουμένη" ("Ecumene") - set of applications and
#  configurations to assist with deploy and set up of an environments.
#
#  Οἰκουμένη is free software: you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation, either version 3 of
#  the License, or (at your option) any later version.
#
#  Οἰκουμένη is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Οἰκουμένη.
#  If not, see <http://www.gnu.org/licenses/>.
#
##


-   set_fact:
        file_helm_values="/tmp/artifacts/{{ ingress_controller.nginx.chart.dir }}/values.yaml"

-   name:               Upload Ingress Controller Helm both as Tar and as directory.
    synchronize:
        src:            "{{ item.donor }}"  # If this path is a file and relative, then it's relative to Ansible control machine working directory (file path is NOT relative to 'roles/*/files'). If the path is a directory, it's relative to 'roles/*/files'.
        dest:           "{{ item.acceptor }}"
        rsync_opts:
            - "--copy-links"
            - "--hard-links"
            #- "--relative"  # It do not mean what do you think. 'man rsync' - This means that the full path names specified on the command line are sent to the server rather than just the last parts of the filenames.
        checksum:       true
        verify_host:    true
    with_items:
        - donor:        "{{ ingress_controller.nginx.chart.dir }}"
          acceptor:     "/tmp/artifacts/{{ ingress_controller.nginx.chart.dir | dirname }}"
        - donor:        "artifacts/{{ ingress_controller.nginx.chart.tar }}"  # It's useage and application is underdevelopment. May be deprecated, may be not.
          acceptor:     "/tmp/artifacts/{{ ingress_controller.nginx.chart.tar }}"


-   name:               Upload Helm Chart parameters.
    template:
        src:            "ingress-controller-nginx-values.yaml"
        dest:           "{{ file_helm_values }}"
        owner: root
        group: root
        mode: '0600'


-   name:   Install Ingress Controller.
    shell:  |
            PS4="+:\${LINENO}: "
            set -xeu
            helm_name="ingress-controller"
            export KUBECONFIG=/etc/kubernetes/admin.conf
            function act_on_helm_chart {
                set -eu
                local -r action="${1}"
                for chart_location in \
                        "/tmp/artifacts/{{ ingress_controller.nginx.chart.dir }}" \
                        "/tmp/artifacts/{{ ingress_controller.nginx.chart.tar }}"
                do
                    if [ -e "${chart_location}" ] ; then
                        helm \
                            "${action}" \
                            --create-namespace \
                            --namespace kube-system \
                            --values "{{ file_helm_values }}" \
                            "${helm_name}" \
                            "${chart_location}"
                        break
                    fi
                done
            }
            if helm status --namespace kube-system "${helm_name}" \
                | egrep '^STATUS: deployed$'
            then
                h_action=upgrade
            else
                h_action=install
            fi
            if ! act_on_helm_chart "${h_action}" ; then
                helm delete --namespace kube-system "${helm_name}" || true
                act_on_helm_chart install
            fi
            set +x
            echo "INFO:$( basename "${0}" ):${LINENO}: Job done." >&2
    args:
        executable: /bin/bash
    register: fb_ingress_contrller_install

-   name: Install Ingress Controller - feedback
    debug:
        var: "{{ item }}"
    with_items:
        -   fb_ingress_contrller_install.stdout_lines
        -   fb_ingress_contrller_install.stderr_lines
